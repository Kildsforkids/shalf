{"version":3,"sources":["components/BooleanField.jsx","App.js","index.js"],"names":["BooleanField","field","props","className","value","onClick","name","App","useState","age","setAge","gender","setGender","fields","setFields","searchQuery","setSearchQuery","resultQuery","setResultQuery","sortedFields","setSortedFields","result","setResult","resultIACP","setResultIACP","checkField","index","indexOf","axios","post","query","then","response","data","catch","error","console","log","setAgeValue","num","min","max","Math","useEffect","get","map","sorted","filter","toLowerCase","includes","onChange","e","target","placeholder","type","comment","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3264c846.chunk.js","sourcesContent":["import './BooleanField.css'\r\n\r\nfunction BooleanField({field, ...props}) {\r\n    return (\r\n        <div className={'boolean-field' + (field.value ? ' checked' : '')} onClick={() => props.onClick(field)}>\r\n            {field.name}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BooleanField","import { useEffect, useState } from 'react'\nimport './App.css'\nimport BooleanField from './components/BooleanField'\nimport axios from 'axios'\n\nfunction App() {\n\n    const [age, setAge] = useState(0)\n    const [gender, setGender] = useState(0)\n    const [fields, setFields] = useState([])\n    const [searchQuery, setSearchQuery] = useState('')\n    const [resultQuery, setResultQuery] = useState([])\n    const [sortedFields, setSortedFields] = useState([])\n    const [result, setResult] = useState('Нет диагноза')\n    const [resultIACP, setResultIACP] = useState('')\n\n    useEffect(() => {\n        axios.get('/parameters')\n            .then(response => {\n                setFields(response.data.result)\n            })\n            .catch(error => {\n                console.log(error)\n            })\n    }, [])\n\n    useEffect(() => {\n        const result = fields.map(field => {\n            if (field.value) return 1\n            return 0\n        })\n        setResultQuery([gender, age, ...result])\n    }, [gender, age,fields])\n\n    useEffect(() => {\n        const sorted = fields.filter(field => {\n            return field.name.toLowerCase().includes(searchQuery.toLowerCase())\n        })\n        setSortedFields(sorted)\n    }, [fields, searchQuery])\n\n    function checkField(field) {\n        const index = fields.indexOf(field)\n        fields[index].value = !fields[index].value\n        setFields([...fields])\n\n        axios.post('/predict', {\n            query: resultQuery\n        })\n            .then(response => {\n                setResult(response.data.result)\n            })\n            .catch(error => {\n                console.log(error)\n            })\n    }\n\n    function predictIACP() {\n        setResultIACP('...')\n        axios.post('/iacp/predict', {\n            query: resultQuery\n        })\n            .then(response => {\n                setResultIACP(response.data.result.comment)\n            })\n            .catch(error => {\n                console.log(error)\n                setResultIACP('')\n            })\n    }\n\n    function setFieldValue(field, value) {\n        const index = fields.indexOf(field)\n        value = Number(value)\n        if (value > 100) value = 100\n        else if (value < 0) value = 0\n        fields[index].value = value\n        setFields([...fields])\n    }\n\n    function clamp(num, min, max) {\n        return Math.min(Math.max(num, min), max)\n    }\n\n    function setAgeValue(age) {\n        setAge(clamp(age, 0, 200))\n    }\n\n    return (\n        <div className=\"wrapper\">\n            <div className=\"search-panel\">\n                <input\n                    value={searchQuery}\n                    onChange={e => setSearchQuery(e.target.value)}\n                    placeholder=\"Поиск\"\n                    className=\"search-field\"\n                    type=\"text\"\n                />\n            </div>\n            <div className=\"common-fields\">\n                <div className=\"number-field\">\n                    <div className=\"number-field__title\">\n                        Возраст\n                    </div>\n                    <input\n                        value={age}\n                        onChange={e => setAgeValue(e.target.value)}\n                        type=\"number\" />\n                </div>\n                <div className=\"toggle-field\">\n                    <div\n                        onClick={() => setGender(0)}\n                        className={'toggle-field__option ' + (gender === 0 ? 'active' : '')}>\n                        Женщина\n                    </div>\n                    <div\n                        onClick={() => setGender(1)}\n                        className={'toggle-field__option ' + (gender === 1 ? 'active' : '')}>\n                        Мужчина\n                    </div>\n                </div>\n            </div>\n            <form className=\"form\">\n                {sortedFields.map((field, index) => {\n                    return <BooleanField\n                        key={index}\n                        field={field}\n                        onClick={checkField}\n                    />\n                }\n                )\n                }\n            </form>\n            <p className=\"hint\">{resultQuery}</p>\n            <p className=\"hint\">{result}</p>\n            <div className=\"iacp-panel\">\n                <div className=\"iacp-solver\">\n                    <button onClick={predictIACP}>IACPaaS</button>\n                    <div className=\"iacp-solver__result\">\n                        <p>{resultIACP}</p>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}